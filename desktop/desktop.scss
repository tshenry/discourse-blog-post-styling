/// str-split function found at: https://github.com/sass-projects/stringy/blob/master/src/scss/_str-split.scss
/// License: MIT

/// String split
///
/// Splits a String into a list of substrings using `$separator`.
/// If separator is omitted, the list returned contains one element consisting of the entire string.
/// If separator is an empty string, str is converted to a list of all characters.
/// Integer specifying a limit on the number of splits to be found.
/// The split method still splits on every match of separator, but it truncates the returned list to at most limit elements.
///
/// @param {string}  $string
/// @param {string}  $separator
/// @param {$number} $limit
///
/// @return {list}
///
/// @author pascalduez https://gist.github.com/pascalduez/065e560c6314c7e9d7f8
@function str-split($string, $separator: null, $limit: null) {
  $string: unquote($string);

  @if type-of($string) != "string" {
    @error "`str-split` function expecting a string for $string; #{type-of($string)} given.";
  }

  $result: zip(());

  @if not $separator {
    @return ($string);
  }

  @if $separator == "" {
    @for $i from 1 through str-length($string) {
      $result: append($result, str-slice($string, $i, $i));
    }

    @return $result;
  }

  $running: true;
  $progress: $string;
  $length: str-length($separator);

  @while $running {
    $index: str-index($progress, $separator);
    @if $index {
      $result: append($result, str-slice($progress, 1, ($index - 1)));
      $progress: str-slice($progress, ($index + $length));
    } @else {
      $running: false;
    }
  }

  $result: append($result, $progress);

  @if $limit and $limit > 0 {
    $limit: if($limit > length($result), length($result), $limit);
    $return: ();
    @for $i from 1 through $limit {
      $return: append($return, nth($result, $i));
    }

    @return $return;
  }

  @return $result;
}

$values: $blog_category;
$split-values: str-split($values, ",");
@each $value in $split-values {
  .category-#{$value} {
    @extend %blog-category;
  }
}

$values: $blog_tag;
$split-values: str-split($values, "|");
@each $value in $split-values {
  .tag-#{$value} {
    @extend %blog-tag;
  }
}

%blog-tag,
%blog-category {
  .topic-timeline {
    display: none;
  }

  #topic-title {
    display: flex;
    justify-content: center;
    margin-top: 1em;
    .title-wrapper {
      width: calc(690px + (11px * 2));
    }
  }

  .blog-image-container {
    text-align: center;
    .blog-image img {
        width:100%;
        height:100%;
        border-radius:2em;
        box-shadow:0 1px 2px rgba(0,0,0,.2);
      @if $image_display_style == 'responsive crop' {
        background-size: cover;
        width: 100%;
      }
    }
  }

  .container.posts {
    justify-items: end;
    padding-left: 20px;
    .topic-post {
      .row {
        display: flex;
        justify-content: center;
      }
    }
  }

  #post_1 {
     .topic-body {
      padding-top: 8px;
      border-top: none;

      &.highlighted {
        animation: none;
      }

      .topic-meta-data {
        display: flex;
        flex-direction: column;
        align-items: unset;
        padding: 0;
        margin-left: 6px;
        margin-bottom: 2px;
        .names span {
          font-size: 1.15em;
        }

        .post-infos {
          display: flex;
          justify-content: space-between;
          .post-info.edits {
            float: right;
            margin-left: 5px;
            order: 1;
          }
          .post-info.post-date {
            float: left;
          }
        }
      }
      /*.contents {
        border-top: 1px solid var(--primary-low);
        margin-left: -25px;
        padding: 15px;
      }*/
      .topic-map {
        margin: 20px -12px 20px -38px;
      }
    }

    .cooked {
      big {
        font-size: 2rem;
        line-height: 2rem;
        letter-spacing: 1px;
        display: inline-block;
        font-family: Georgia;
      }

      & > p:first-child + div.lightbox-wrapper {
        display: none;
        & + p {
          margin-top: -15px;
        }
      }

      & > p img:not(.emoji) {
        display: none;
      }

      & > p ~ p img:not(.emoji) {
        display: block;
      }
    }
  }

  @media all and (max-width: 775px) {
    #topic-title {
      margin-left: 24px;
      justify-content: left;
    }

    #topic-title .title-wrapper {
      box-sizing: border-box;
      width: calc(100% - 47px);
    }
  }

  @media all and (min-width: 950px) {
    .timeline-container {
      margin-left: 950px;
    }
  }

  // Adjust reply flair position
  .topic-avatar .avatar-flair {
    bottom: unset;
    top: 34px;

    &.rounded {
      top: 30px;
    }
  }

  // Center and style other post components
  .small-action,
  .topic-status-info,
  .signup-cta {
    margin: 0 auto;
  }

  .small-action {
    background-color: var(--primary-very-low);
    margin-bottom: 10px;
    font-size: 0.75em;
    height: 35px;
    .topic-avatar svg {
      font-size: 1.5em;
      margin-top: 2px;
    }
  }

  .small-action .small-action-desc a.trigger-user-card {
    align-self: unset;
  }

  // CSS below taken from Simon's original Blog Post plugin
  #topic-title h1 a.fancy-title {
    font-size: 2em;
  }
  

  .topic-meta-data {
    font-size: small;
  }

  .cooked {
    padding: 0.5em 1em;
  }

  .topic-post {
    padding-bottom: 8px;
  }

  .topic-post:first-child {
    font-size: 1.25em;
    line-height: 1.4;
    padding-bottom: 0;
    padding-top: 4px;

    .topic-avatar {
      border-top: 1px solid var(--primary-low);
      padding-top: 4px;
    }

    .topic-body {
      background-color: var(--secondary);
      padding-top: 16px;
    }

    .cooked {
      padding: 0;
    }

    nav.post-controls .actions,
    .topic-map,
    .post-admin-menu {
      font-size: 14px;
    }

    figure {
      margin: 0;
    }

    figcaption {
      margin-top: -16px;
      font-size: 0.8em;
      font-weight: bold;
    }

    blockquote {
      background: var(--primary-very-low);
      color: var(--primary-high);
      border-left: 10px solid var(--primary-low-mid);
      padding: 0.5em 10px;
    }
    blockquote:before {
      color: var(--primary-low-mid);
      content: open-quote;
      font-size: 4em;
      line-height: 0.1em;
      vertical-align: -0.4em;
    }
    blockquote p {
      display: inline;
    }
  }

  // Hide the timeline when first entering the topic.
  .timeline-container.timeline-docked {
    display: none;
  }

  // Play nice with DiscoTOC theme component
  .d-toc-toggle + p + div.lightbox-wrapper {
    display: none;
    & + p {
      margin-top: -15px;
    }
  }
  @media screen and (min-width: $large-width) {
    .d-toc-regular {
      #topic-title {
        margin-left: 10px;
        display: block;
      }
      .d-toc {
        font-size: 0.8em;
      }
      #post_1 .topic-body .topic-map {
        margin: 20px -1px 20px -25px;
      }
      .topic-post:not(.d-toc-regular) {
        .topic-body {
          width: calc(667px + (11px * 2));
        }
        .row {
          justify-content: left;
        }
      }
    }
  }
}

@if $full_width == 'true' {
  %blog-tag,
  %blog-category {
    #topic-title {
      justify-content: left;
      margin-left: 0px;
      .title-wrapper {
        width: 95%;
        max-width: $large-width;
      }
    }
    .container.posts {
      grid-template-areas: "posts";
      justify-items: left;
      padding: 0;
      #post_1 {
        .topic-avatar {
          padding-left: 0;
        }
        .topic-body {
          width: 100%;
          max-width: $large-width;
          .topic-meta-data {
            padding-bottom:0;
            .post-infos {
              position: absolute;
              right: 0;
            }
            .contents {
              padding: 0;
            }
          }
        }
      }
    }
    .topic-area>.loading-container {
      width: 100%;
    }
  }
}
